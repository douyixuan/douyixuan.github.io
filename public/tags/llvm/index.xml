<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Llvm on Cedric&#39;s</title>
    <link>https://douyixuan.github.io/tags/llvm/</link>
    <description>Recent content in Llvm on Cedric&#39;s</description>
    <image>
      <title>Cedric&#39;s</title>
      <url>https://douyixuan.github.io/images/papermod-cover.png</url>
      <link>https://douyixuan.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2024 07:09:24 +0100</lastBuildDate>
    <atom:link href="https://douyixuan.github.io/tags/llvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>llvm and popular compilers</title>
      <link>https://douyixuan.github.io/posts/compiler/llvm-and-popular-compilers/</link>
      <pubDate>Mon, 15 Apr 2024 07:09:24 +0100</pubDate>
      <guid>https://douyixuan.github.io/posts/compiler/llvm-and-popular-compilers/</guid>
      <description>书上学过的程序典型编译流程：
预处理 ( Preprocessing ) 编译 ( Compilation ) 汇编 ( Assemble ) 链接 ( Linking ) 这也是 Unix 操作系统上 GCC 编译器编译 C 代码的编译流程。
LLVM LLVM 则是一个 modulized 的编译器基础设施，提供了编译器开发所需的各种工具和库。
Clang clang++ 是 LLVM 项目中的 C++ 编译器前端。 它是基于 LLVM 架构的 C++ 编译器，提供了对 C++ 语言的支持，并且可以生成目标代码。 clang++ 是 LLVM 项目中的一个具体实现，它使用 LLVM 提供的库来进行 C++ 代码的编译和优化。
以 Clang 举例，介绍一个 C 程序的编译流程。 使用如下命令可以输出 clang 的编译阶段。
clang -v &amp;amp;&amp;amp; \ clang -ccc-print-phases -o test test.c 输出结果
Homebrew clang version 16.</description>
    </item>
  </channel>
</rss>
