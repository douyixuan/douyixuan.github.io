<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cedric&#39;s</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Cedric&#39;s</description>
    <image>
      <title>Cedric&#39;s</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2024 07:09:24 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>llvm and popular compilers</title>
      <link>http://localhost:1313/posts/compiler/llvm-and-popular-compilers/</link>
      <pubDate>Mon, 15 Apr 2024 07:09:24 +0100</pubDate>
      <guid>http://localhost:1313/posts/compiler/llvm-and-popular-compilers/</guid>
      <description>书上学过的程序典型编译流程：
预处理 ( Preprocessing ) 编译 ( Compilation ) 汇编 ( Assemble ) 链接 ( Linking ) 这也是 Unix 操作系统上 GCC 编译器编译 C 代码的编译流程。
LLVM LLVM 则是一个 modulized 的编译器基础设施，提供了编译器开发所需的各种工具和库。
Clang clang++ 是 LLVM 项目中的 C++ 编译器前端。 它是基于 LLVM 架构的 C++ 编译器，提供了对 C++ 语言的支持，并且可以生成目标代码。 clang++ 是 LLVM 项目中的一个具体实现，它使用 LLVM 提供的库来进行 C++ 代码的编译和优化。
以 Clang 举例，介绍一个 C 程序的编译流程。 使用如下命令可以输出 clang 的编译阶段。
clang -v &amp;amp;&amp;amp; \ clang -ccc-print-phases -o test test.c 输出结果
Homebrew clang version 16.</description>
    </item>
    <item>
      <title>Hi</title>
      <link>http://localhost:1313/posts/cpp/byexample/hi/</link>
      <pubDate>Mon, 18 Mar 2024 15:54:35 +0800</pubDate>
      <guid>http://localhost:1313/posts/cpp/byexample/hi/</guid>
      <description>hello world
#include &amp;lt;iostream&amp;gt; int main() { std::cout &amp;lt;&amp;lt; &amp;#34;hi&amp;#34; &amp;lt;&amp;lt; std::endl; } </description>
    </item>
    <item>
      <title>Showoff</title>
      <link>http://localhost:1313/posts/cpp/showoff/</link>
      <pubDate>Mon, 18 Mar 2024 15:39:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/cpp/showoff/</guid>
      <description>This is a showoff direction for the cool cpper.</description>
    </item>
    <item>
      <title>cpp: applications</title>
      <link>http://localhost:1313/posts/cpp/application/</link>
      <pubDate>Sun, 14 Jan 2024 07:07:14 +0100</pubDate>
      <guid>http://localhost:1313/posts/cpp/application/</guid>
      <description>cpp 目前被应用在以下一些领域中。
游戏开发：cpp 是游戏开发中最常用的编程语言之一。它能够优化资源、提供多人联机功能，并且适用于开发3D游戏。著名的 UE 引擎。
图形用户界面（GUI）应用程序：许多常用的 GUI 应用程序，如 Adobe 系统的 Illustrator 和 Photoshop，以及微软的 Win Amp 媒体播放器都是使用 cpp 开发的。
数据库管理系统：流行的数据库管理工具，如 MySQL、Oracle、Postgres 和 MongoDB，都是使用 cpp 开发的。cpp 的文件处理、高速性、可靠性、函数、类和对象等特性使其非常适合数据管理。有一个数据库引擎排名的网站可以参考：https://db-engines.com/en/ranking。
操作系统：大多数操作系统，如 Microsoft Windows、Apple Mac OS X 和移动操作系统 iOS，都是使用 cpp 开发的。作为操作系统同时期发展起来的 cpp，是操作系统的主力语言。
浏览器：许多常用的网页浏览器，如 Google Chrome、Mozilla Firefox 和 Internet Explorer，都是使用 cpp 编写的。cpp 能够使浏览器以高速和最小延迟运行，确保网页内容快速加载。
分布式存储和文件系统：cpp 是实现云存储系统的首选语言，因为它能够与硬件紧密配合，并提供多线程支持，以构建并发应用和负载容忍系统。很多分布式文件系统都是使用 cpp 开发的。
编译器：许多高级编程语言的编译器都是使用 C 或 cpp 编写的。cpp 作为低级语言，能够直接操作硬件资源，因此非常适合编写编译器。比如说 LLVM，很多编程语言都受益于 LLVM。
嵌入式系统：各种嵌入式系统，如智能手表和医疗设备系统，都使用 cpp 进行编程，因为它更接近硬件级别，并且可以提供许多低级功能调用。
企业软件：cpp 用于开发许多企业软件，以及高级应用程序，如飞行模拟和雷达处理。
库：许多高级数学计算库使用 cpp 作为核心编程语言。cpp 比大多数其他编程语言更快，并且支持并发，因此在需要速度和并发性的应用程序中，cpp 是最受欢迎的开发语言之一。</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/vimbyexample/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/vimbyexample/readme/</guid>
      <description>Try these scripts in vim editor.
In normal mode and type
:source hi.vim you can see the result. Or you can use:
vim -eS hi.vim Reference Learn Vimscript the Hard Way</description>
    </item>
  </channel>
</rss>
